<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chant</title>
  <subtitle>Take things as they are with a cavalier attitude./用漫不经心的态度过随遇而安的生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chant00.com/"/>
  <updated>2017-06-08T09:34:14.000Z</updated>
  <id>http://chant00.com/</id>
  
  <author>
    <name>Chant</name>
    <email>statuschuan@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>概率论迷思</title>
    <link href="http://chant00.com/2017/06/07/2017-06-07/"/>
    <id>http://chant00.com/2017/06/07/2017-06-07/</id>
    <published>2017-06-07T02:58:19.000Z</published>
    <updated>2017-06-08T09:34:14.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>当你抛起一枚硬币，你不知道它会是正面还是反面，但你确切的知道正面与反面的概率都是50%。<br>概率论的神奇之处在于，它居然能从不确定性中找到确定性。</p>
<a id="more"></a>
<p>本文不教科书，只是阐述我的观点和思考，如有谬误，欢迎讨论或指正。</p>
<h3 id="一些有趣的观点："><a href="#一些有趣的观点：" class="headerlink" title="一些有趣的观点："></a>一些有趣的观点：</h3><p>一个事情有N种发生的可能性，我们不能确信哪种会发生，是因为我们不能控制结果的发生，影响结果的许多因素不在我们的支配范围之内，这些因素影响结果的机理或者我们不知道，或者太复杂以至于超出了我们大脑或电脑的运算能力。比如：我们不确定掷硬币得到正面或反面，是因为我们的能力不足以用一些物理方程来求解这个结果。再比如：你不能断定你期末能考88分，因为出题、阅卷的不是你。</p>
<blockquote>
<p>对于未发生之事，我们无法掌握其所有参数或无法计算。对于已经发生之事，事情都已经发生了，结果已定，也会因为掌握的信息不全而产生所谓概率。<br>即过去发生的事情虽然事实上是确定的，但因为我们的无知，它成了随机的。</p>
</blockquote>
<p>我们在某个地方挖出了一块瓷器的碎片，它可能是孔子的夜壶，可能是秦始皇的餐具，也可能是隔壁老王的破茶壶从他家到垃圾站又被埋在了这个地方。</p>
<blockquote>
<p>因此：概率在实质上就是无知，而不是说事物本身是随机的。</p>
</blockquote>
<p>这一点很重要，不要误以为概率应该是客观事实。如果你有上帝视角的话，那么一切都是注定，任何事的概率都是100%，也就没有所谓概率之说了。</p>
<p>所以概率论是建立在人们有限的认知中的，不是真正的客观事实。也就是说当孔子一看，这貌似是自己的夜壶啊，他认为这是夜壶的概率为70%，秦始皇一看那块碎片，朕心中只装的下江山，哪来的餐具，在他看来的餐具的概率是1/3，然而，老王的却早已看穿一切，那块碎片割过他的手所以他记得格外清楚，茶壶概率为100%。每个人所知道的信息决定了他所认知的概率。</p>
<p>就像狼人杀，这里假设游戏是7个人+上帝，1号和2号玩家是狼人，发完牌的时候就已经注定谁是狼人了。对于上帝和1、2号而言，没有概率可言，或者说1、2号是狼人的概率是100%。而对于平民而言，他除了自己，他无法找出理由认为谁是狼人，只好用古典概率的等可能假设，认为其他每个人是狼人的概率都是1/6，随着游戏的进行，预言家掌握更多的信息，他修正了自己的概率，而平民也根据自己掌握的信息修正自己概率，于是大家对于谁是狼人这件事都有了不同的概率。</p>
<p>注意到上面这个故事中，不难发现，假设碎片只有夜壶，餐具，茶壶这三种可能，即一开始概率应该是各1/3。从孔子到老王，他们都用各自掌握的信息修正了关于这个碎片是什么的概率。这就引出了先验概率和后验概率的概念。</p>
<h3 id="先验概率（Prior-probability）与后验概率-Posterior-probability"><a href="#先验概率（Prior-probability）与后验概率-Posterior-probability" class="headerlink" title="先验概率（Prior probability）与后验概率(Posterior probability)"></a>先验概率（Prior probability）与后验概率(Posterior probability)</h3><p>事情还没有发生,要求这件事情发生的可能性的大小,是先验概率.<br>事情已经发生,要求这件事情发生的原因是由某个因素引起的可能性的大小,是后验概率.</p>
<h4 id="先看看来自wiki的定义："><a href="#先看看来自wiki的定义：" class="headerlink" title="先看看来自wiki的定义："></a>先看看来自wiki的定义：</h4><blockquote>
<p>Similarly, the prior probability of a random event or an uncertain proposition is the unconditional probability that is assigned before any relevant evidence is taken into account.</p>
<p>In Bayesian statistics, the posterior probability of a random event or an uncertain proposition is the conditional probability that is assigned after the relevant evidence or background is taken into account. Similarly, the posterior probability distribution is the probability distribution of an unknown quantity, treated as a random variable, conditional on the evidence obtained from an experiment or survey. “Posterior”, in this context, means after taking into account the relevant evidence related to the particular case being examined.<br>要注意的是这是在贝叶斯统计中。不是公理化的概率定义。</p>
</blockquote>
<h4 id="再看看书上的解释"><a href="#再看看书上的解释" class="headerlink" title="再看看书上的解释"></a>再看看书上的解释</h4><p>在此墙裂推荐<a href="http://baike.baidu.com/item/%E9%99%88%E5%B8%8C%E5%AD%BA" target="_blank" rel="external">陈希孺院士</a>的<a href="https://pan.baidu.com/share/link?shareid=2886575657&amp;uk=1544463416&amp;fid=265734025" target="_blank" rel="external">《概率论与数理统计》</a>，这是<a href="https://book.douban.com/subject/2201479/" target="_blank" rel="external">豆瓣</a>、<a href="https://www.zhihu.com/question/19754027" target="_blank" rel="external">知乎</a>的书评和推荐。陈老这本书之所以受到如此簇拥，在于它授人以渔而非授人以鱼，你读一读就是知道。<br><img src="/media/14968900682614.jpg" alt=""><br><img src="/media/14968901016340.jpg" alt=""></p>
<p><img src="/media/14968897485952.jpg" alt=""></p>
<p>举一个的简单的例子：一口袋里有3只红球、2只白球，采用不放回方式摸取，求：<br>⑴ 第一次摸到红球（记作A）的概率；<br>⑵ 第二次摸到红球（记作B）的概率；<br>⑶ 已知第二次摸到了红球，求第一次摸到的是红球的概率。<br>解：<br>⑴ P(A)=3/5，还没还有摸球，就问概率，这就是验前概率；<br>⑵ P(B)=P(A)P(B|A)+P(A逆)P(B|A逆)=3/5<br>⑶ P(A|B)=P(A)P(B|A)/P(B)=1/2，这就是后验概率，第一次和第二次摸球这件事都已经发生了，但是我们不知道，比如第一次我们是闭着眼摸完又放回去了，便产生了概率之说。第一问事情未发生（或者说发生了，但是相对于未发生得情况，我们并没有掌握任何更多的信息）我们认为概率是3/5,第三问，我们知道了第二次摸到红球这件事，或者说证据，以此来修正这个概率，就像推理小说一样。<br>关于先验概率和后验概率，推荐阅读：<br><a href="https://wenku.baidu.com/view/90499599a98271fe900ef930.html" target="_blank" rel="external">数理统计中的两个学派——频率学派和Bayes学派</a>(1990年的期刊，能找到也是不容易）</p>
<h4 id="一个笑话引发的血案："><a href="#一个笑话引发的血案：" class="headerlink" title="一个笑话引发的血案："></a>一个笑话引发的血案：</h4><p>病人：我听说这个手术成功概率为1%，我是不是该放弃治疗？<br>医生：你放心，我敢保证这次手术100%会成功。<br>病人：真的？为什么？<br>医生：因为我已经失败了99次了。</p>
<p>这是很多人都会犯的“常识”错误，也是经常让人迷惑的地方。可能在这个笑话里，大家没什么深刻感受，那换个例子，比如：A已经抛了100次硬币，每次都是正面，那么下一次反面的几率是不是更大？即使是统计学专业的学生也经常迷糊（比如统计学渣的我），我就一直纳闷，按照<a href="http://baike.baidu.com/link?url=rliSEcDnpJArLoIki5x-X2735xHFMo1VNLPNEBTRAJkPuoj3LcTNgtpaUyQuVFG8V14izi-oId92sbc4edM56Lm-pOu9tiFYeJJhP1QekyytshFvvNHSTPy6oxotuJEU" target="_blank" rel="external">大数定律</a>（<a href="https://www.zhihu.com/question/19911209" target="_blank" rel="external">知乎的解释</a>），如果抛硬币的次数足够多，他就应该是正反各1/2的分布啊，A都抛了100次正面了，下一次就该是反面几率更大了啊。可是每次抛硬币应该是相互独立的，也就是说之前抛无数次也不该影响下一次的概率，即1/2。这个问题的争论，请参考<a href="http://blog.sina.com.cn/s/blog_4ce95d300100fwz3.html" target="_blank" rel="external">先验概率与后验概率的区别（老迷惑了）</a>。</p>
<p>我比较认可比较的解释是其评论中的一段话，当然，前提是你得清楚频率（ <strong>千万别把频率直接等同于概率</strong>），概率的古典定义和统计定义以及公理化定义。</p>
<blockquote>
<p>从网上的资料来看，概率本身有多种解释。每一种解释都有一定的漏洞。如果不是研究概率的根本问题（逻辑一致），我们在自己的研究领域不太可能会遇到这些漏洞。（PS:这里必须要说明的是，概率有多种定义（古典定义和统计定义以及公理化定义），但这不是三国演义，我柯早已一统天下，概率的公理化定义有且只有一个，没有漏洞。当然这里所说的逻辑不一致应该是指数理统计中的频率学派和贝叶斯学派之争）<br><img src="/media/14969063400963.jpg" alt=""></p>
<p>频率学派和贝叶斯学派都有存在的理由。频率学派的“无穷次实验”，贝叶斯学派的“先验概率”，都是有争议的。<br>楼主的第4问，前提是承认了频率学派的观点，但注意它们的观点有一个无穷次实验的假设。我揣测楼主的观点是，因为已经抛了100次正面了，那么，后面抛反面的次数应该多一点，不然总和就不是1/2了，再根据频率学派的观点，出现的频率多一点，于是概率也就大一点。从理论上来说，任何有限次的正面，都不会影响无穷次实验的结果比率。所以，“后面抛反面的次数应该多一点”这一点是不成立的，即使后面的反面的次数少一些，也不会影响这个比率。常数+无穷大=无穷大</p>
</blockquote>
<p>关于概率论，一直有许多搞不懂的问题，迷迷糊糊混过四年。在学习HMM和CRF高楼大厦时，发现地基已碎，一边百度基础概念一边学，更是痛苦万分。在搜寻问题时产生更多的问题，终于在重新读了概率论前几章后，算是豁然开朗了很多，所以打算重读概率论，夯实基础，我应该会开个重读概率论的分类，有很多事要做，就并行处理吧，不知道会不会半途而废，也不知道半途而废的概率是多少（当然，我可以凭经验先给出一个主观先验概率，在以后的过程中再慢慢修正得到后验概率，直到概率为0或1），但是有些疑惑终究会推着我去探寻。</p>
<h3 id="推荐阅读："><a href="#推荐阅读：" class="headerlink" title="推荐阅读："></a>推荐阅读：</h3><p><a href="http://blog.csdn.net/pongba/article/details/2958094" target="_blank" rel="external">数学之美番外篇：平凡而又神奇的贝叶斯方法</a></p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol>
<li><a href="http://blog.sina.com.cn/s/blog_4ce95d300100fwz3.html" target="_blank" rel="external">先验概率与后验概率的区别（老迷惑了）</a></li>
<li><a href="http://blog.csdn.net/passball/article/details/5859878" target="_blank" rel="external">先验概率与后验概率及贝叶斯公式</a></li>
<li><a href="https://pan.baidu.com/share/link?shareid=2886575657&amp;uk=1544463416&amp;fid=265734025" target="_blank" rel="external">《概率论与数理统计》–陈希孺</a></li>
<li><a href="https://wenku.baidu.com/view/90499599a98271fe900ef930.html" target="_blank" rel="external">数理统计中的两个学派——频率学派和Bayes学派
</a></li>
<li>《概率论与数理统计》–盛骤，谢式千，潘承毅编.-4版</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当你抛起一枚硬币，你不知道它会是正面还是反面，但你确切的知道正面与反面的概率都是50%。&lt;br&gt;概率论的神奇之处在于，它居然能从不确定性中找到确定性。&lt;/p&gt;
    
    </summary>
    
      <category term="重读概率论" scheme="http://chant00.com/categories/%E9%87%8D%E8%AF%BB%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
      <category term="Algorithm" scheme="http://chant00.com/categories/%E9%87%8D%E8%AF%BB%E6%A6%82%E7%8E%87%E8%AE%BA/Algorithm/"/>
    
    
      <category term="概率论" scheme="http://chant00.com/tags/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
      <category term="先验概率" scheme="http://chant00.com/tags/%E5%85%88%E9%AA%8C%E6%A6%82%E7%8E%87/"/>
    
      <category term="后验概率" scheme="http://chant00.com/tags/%E5%90%8E%E9%AA%8C%E6%A6%82%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>那些你常用但是却不知道如何用英文表达的句子</title>
    <link href="http://chant00.com/2017/06/06/2017-06-06homeTest/"/>
    <id>http://chant00.com/2017/06/06/2017-06-06homeTest/</id>
    <published>2017-06-06T13:09:23.000Z</published>
    <updated>2017-06-08T09:20:52.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>掌握另外一种语言（外语），真正的难点在于掌握它与已习得语言（母语）的不重合之处。直观的一一对应，其实没什么难度：“那是一本书”对应着“That’s a book”。而那些你常用到的句子或短语，翻译成英文，却一听就知道是中式英文。<em>“若果我没记错的话…”</em> 用英语怎么说？是 <em>If I didn’t remembered wrong…</em>吗？是英语里就没有这样的表达，还是我们不知道它的地道表达方式呢？</p>
<a id="more"></a>
<p>而所谓的“不地道”，其实不过用母语的表达习惯去说外语。比如：<br>    •    如果我没记错的话……<br>    •    我从未想过……<br>    •    你竟然跟我这么说话！<br>    •    就知道你有这本事！<br>    •    (这)听着耳熟吧？<br>    •    我想不起来那名字了……<br>这些句子，基本上都是我们日常生活中必然用到的句子（或片段），可是，如果“直译”的话，就很别扭：<br>    •    If I didn’t remembered wrong…<br>    •    I never thought of/that…<br>    •    How dare you talking to me like this!<br>    •    I know you have such a capability!<br>    •    Does it sound familiar?<br>    •    I cannot remember that name…<br>同样的语境里，“地道”的说法是这样的：<br>    •    If my memory serves, …<br>    •    It never occurred to me that…<br>    •    Are we really having this conversation?<br>    •    Always knew you had it in you!<br>    •    Does it ring a bell to you?<br>    •    That name escapes me….<br>看完这几个地道的翻译后，是不是有种一拍大腿，醍醐灌顶之快感。</p>
<p>无意中看到李笑来的 <a href="http://zhibimo.com/books/xiaolai/everyone-can-use-english" target="_blank" rel="external">《人人都能用英语》</a>，方法论类的书不需要多读，这些书在我看来在我看来其实挺不靠谱，要学英语就去学英语啊，看英语的学习资料啊，但是，闲来无事时选一两本还是就可以一读的，或许会有耳目一新的论见颠覆你的一些固有思维，或者称之为常识的东西，不一定让你的学习事半功倍，但至少开拓了你的思维，也舒缓下学习带来的的紧绷状态。</p>
<p>参考资料：</p>
<ol>
<li><a href="http://zhibimo.com/books/xiaolai/everyone-can-use-english" target="_blank" rel="external">知笔墨 –《人人都能用英语 – 李笑来》</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;掌握另外一种语言（外语），真正的难点在于掌握它与已习得语言（母语）的不重合之处。直观的一一对应，其实没什么难度：“那是一本书”对应着“That’s a book”。而那些你常用到的句子或短语，翻译成英文，却一听就知道是中式英文。&lt;em&gt;“若果我没记错的话…”&lt;/em&gt; 用英语怎么说？是 &lt;em&gt;If I didn’t remembered wrong…&lt;/em&gt;吗？是英语里就没有这样的表达，还是我们不知道它的地道表达方式呢？&lt;/p&gt;
    
    </summary>
    
      <category term="English learning" scheme="http://chant00.com/categories/English-learning/"/>
    
    
      <category term="English" scheme="http://chant00.com/tags/English/"/>
    
      <category term="英语学习" scheme="http://chant00.com/tags/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>HIVE和HBASE区别</title>
    <link href="http://chant00.com/2017/06/06/2017-06-06/"/>
    <id>http://chant00.com/2017/06/06/2017-06-06/</id>
    <published>2017-06-06T06:45:30.000Z</published>
    <updated>2017-06-08T09:21:01.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p><img src="/media/hiveHbase.jpg" alt="hiveHbase"><br>从架构图中不难看出，Hive是运行在MapReduce之上的，而Hbase则是在更底层的HDFS之上，他们的读写和查询特点也因此而迥然不同。</p>
<a id="more"></a>
<p>如果英语不错的话，请直接跳到<a href="#jump">英文原版</a></p>
<h3 id="1-两者分别是什么？"><a href="#1-两者分别是什么？" class="headerlink" title="1. 两者分别是什么？"></a>1. 两者分别是什么？</h3><blockquote>
<p>Apache Hive</p>
</blockquote>
<p>是一个构建在Hadoop基础设施之上的数据仓库。通过Hive可以使用HQL语言查询存放在HDFS上的数据。HQL是一种类SQL语言，这种语言最终被转化为Map/Reduce. <strong>虽然Hive提供了SQL查询功能，但是Hive不能够进行交互查询–因为它只能够在Haoop上批量的执行Hadoop。</strong></p>
<blockquote>
<p>Apache HBase</p>
</blockquote>
<p>是一种Key/Value系统，一种运行于HDFS顶层的NoSQL(=Not Only SQL，泛指非关系型的数据库)数据库系统。区别于Hive，HBase具备随即读写功能，是一种面向列的数据库。<strong>和Hive不一样，Hbase的能够在它的数据库上实时运行，而不是运行MapReduce任务。</strong> <em>Hbase被分区为表格，表格又被进一步分割为列簇。列簇必须使用schema定义，列簇将某一类型列集合起来（列不要求schema定义）。例如，“message”列簇可能包含：“to”, ”from” “date”, “subject”, 和”body”. 每一个 key/value对在Hbase中被定义为一个cell，每一个key由row-key，列簇、列和时间戳组成。</em> 在Hbase中，行是key/value映射的集合，这个映射通过row-key来唯一标识。Hbase利用Hadoop的基础设施，可以利用通用的设备进行水平的扩展。</p>
<h3 id="2-两者的特点"><a href="#2-两者的特点" class="headerlink" title="2. 两者的特点"></a>2. 两者的特点</h3><pre><code>Hive帮助熟悉SQL的人运行MapReduce任务。因为它是JDBC兼容的，同时，它也能够和现存的SQL工具整合在一起。**运行Hive查询会花费很长时间，因为它会默认遍历表中所有的数据。** 虽然有这样的缺点，一次遍历的数据量可以通过Hive的分区机制来控制。分区允许在数据集上运行过滤查询，这些数据集存储在不同的文件夹内，查询的时候只遍历指定文件夹（分区）中的数据。这种机制可以用来，例如，只处理在某一个时间范围内的文件，只要这些文件名中包括了时间格式。
HBase通过存储key/value来工作。它支持四种主要的操作:
•    添加或更新数据行
•    扫描获取某范围内的cells
•    为某一具体数据行返回对应的cells
•    从数据表中删除数据行/列，或列的描述信息
•    列信息可用于获取数据变动前的取值（透过HBase压缩策略可以删除列信息历史记录来释放存储空间）。
</code></pre><p>虽然HBase包括表格，但是schema仅仅被表格和列簇所要求，列不需要schema。Hbase的表格包括增加/计数功能。</p>
<h3 id="3-限制"><a href="#3-限制" class="headerlink" title="3. 限制"></a>3. 限制</h3><p>Hive不支持常规的SQL更新语句，如：数据插入，更新，删除。因为其对数据的操作是针对整个数据表的。另外，由于hive在hadoop上运行批量操作，<strong>它需要花费很长的时间，通常是几分钟到几个小时才可以获取到查询的结果</strong>。<em>Hive必须提供预先定义好的schema将文件和目录映射到列，并且Hive与ACID不兼容。</em><br>HBase查询是通过特定的语言来编写的，这种语言需要重新学习。类SQL的功能可以通过Apache Phonenix实现，<strong>但这是以必须提供schema为代价的</strong>。另外，Hbase也并不是兼容所有的ACID特性，虽然它支持某些特性。<strong>最后但是最重要的–为了运行Hbase，Zookeeper是必须的</strong>，zookeeper是一个用来进行分布式协调的服务，这些服务包括配置服务，维护元信息和命名空间服务。</p>
<h3 id="4-应用场景"><a href="#4-应用场景" class="headerlink" title="4. 应用场景"></a>4. 应用场景</h3><p>Hive适合用来 <strong>对一段时间内的数据进行分析查询，适用于网络日志等数据量大、静态的数据查询</strong> 。例如，用来计算趋势或者网站的日志。<strong>Hive不应该用来进行实时的查询。因为它需要很长时间才可以返回结果</strong>。<br>    Hbase非常适合用来 <strong>进行大数据的实时查询</strong>。<em>Facebook用Hbase进行消息和实时的分析。它也可以用来统计Facebook的连接数。</em></p>
<h3 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h3><p>Hive和Hbase是两种基于Hadoop的不同技术–Hive是一种类SQL的引擎，并且运行MapReduce任务，Hbase是一种在Hadoop之上的NoSQL 的Key/vale数据库。当然，<strong>这两种工具是可以同时使用的。就像用Google来搜索，用FaceBook进行社交一样，Hive可以用来进行统计查询，HBase可以用来进行实时查询，数据也可以从Hive写到Hbase，设置再从Hbase写回Hive。<br>例如：利用Hive处理静态离线数据，利用HBase进行联机实时查询，而后对两者间的结果集进行整合归并，从而使得数据完整且永葆青春，为进一步的商业分析提供良好支持。</strong></p>
<p><span id="jump"> </span></p>
<h3 id="6-英文原版"><a href="#6-英文原版" class="headerlink" title="6.英文原版"></a>6.英文原版</h3><p>万一你英语不错却翻不了墙，那多尴尬啊。😂给你准备了英文原版，请享用。</p>
<h3 id="Hive-vs-HBase"><a href="#Hive-vs-HBase" class="headerlink" title="Hive vs. HBase"></a>Hive vs. HBase</h3><blockquote>
<p>By Saggi Neumann  Big Data  May 26, 2014</p>
</blockquote>
<p>Comparing Hive with HBase is like comparing Google with Facebook - although they compete over the same turf (our private information), they don’t provide the same functionality. But things can get confusing for the Big Data beginner when trying to understand what Hive and HBase do and when to use each one of them. Let’s try and clear it up.</p>
<h4 id="What-They-Do"><a href="#What-They-Do" class="headerlink" title="What They Do"></a>What They Do</h4><p>Apache Hive is a data warehouse infrastructure built on top of Hadoop. It allows for querying data stored on HDFS for analysis via HQL, an SQL-like language that gets translated to MapReduce jobs. Despite providing SQL functionality, Hive does not provide interactive querying yet - it only runs batch processes on Hadoop.<br>Apache HBase is a NoSQL key/value store which runs on top of HDFS. Unlike Hive, HBase operations run in real-time on its database rather than MapReduce jobs. HBase is partitioned to tables, and tables are further split into column families. Column families, which must be declared in the schema, group together a certain set of columns (columns don’t require schema definition). For example, the “message” column family may include the columns: “to”, “from”, “date”, “subject”, and “body”. Each key/value pair in HBase is defined as a cell, and each key consists of row-key, column family, column, and time-stamp. A row in HBase is a grouping of key/value mappings identified by the row-key. HBase enjoys Hadoop’s infrastructure and scales horizontally using off the shelf servers.</p>
<h4 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h4><p>Hive can help the SQL savvy to run MapReduce jobs. Since it’s JDBC compliant, it also integrates with existing SQL based tools. Running Hive queries could take a while since they go over all of the data in the table by default. Nonetheless, the amount of data can be limited via Hive’s partitioning feature. Partitioning allows running a filter query over data that is stored in separate folders, and only read the data which matches the query. It could be used, for example, to only process files created between certain dates, if the files include the date format as part of their name.<br>HBase works by storing data as key/value. It supports four primary operations: put to add or update rows, scan to retrieve a range of cells, get to return cells for a specified row, and delete to remove rows, columns or column versions from the table. Versioning is available so that previous values of the data can be fetched (the history can be deleted every now and then to clear space via HBase compactions). Although HBase includes tables, a schema is only required for tables and column families, but not for columns, and it includes increment/counter functionality.</p>
<h4 id="Limitations"><a href="#Limitations" class="headerlink" title="Limitations"></a>Limitations</h4><p>Hive does not currently support update statements. Additionally, since it runs batch processing on Hadoop, it can take minutes or even hours to get back results for queries. Hive must also be provided with a predefined schema to map files and directories into columns and it is not ACID compliant.<br>HBase queries are written in a custom language that needs to be learned. SQL-like functionality can be achieved via Apache Phoenix, though it comes at the price of maintaining a schema. Furthermore, HBase isn’t fully ACID compliant, although it does support certain properties. Last but not least - in order to run HBase, ZooKeeper is required - a server for distributed coordination such as configuration, maintenance, and naming.</p>
<h4 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h4><p>Hive should be used for analytical querying of data collected over a period of time - for instance, to calculate trends or website logs. Hive should not be used for real-time querying since it could take a while before any results are returned.<br>HBase is perfect for real-time querying of Big Data. Facebook use it for messaging and real-time analytics. They may even be using it to count Facebook likes.</p>
<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p>Hive and HBase are two different Hadoop based technologies - Hive is an SQL-like engine that runs MapReduce jobs, and HBase is a NoSQL key/value database on Hadoop. But hey, why not use them both? Just like Google can be used for search and Facebook for social networking, Hive can be used for analytical queries while HBase for real-time querying. Data can even be read and written from Hive to HBase and back again.</p>
<p>参考资料：<br>主要源于：<a href="http://www.cnblogs.com/justinzhang/p/4273470.html" target="_blank" rel="external">HIVE和HBASE区别</a> 汉化于 <a href="https://www.xplenty.com/blog/2014/05/hive-vs-hbase/?%20utm_source=dzone&amp;utm_medium=link&amp;utm_term=upd&amp;utm_campaign=May%202014%20Blog%205.22" target="_blank" rel="external">原文出处</a><br>部分源于：<a href="http://www.chinastor.com/a/hbase/0G3Z532014.html" target="_blank" rel="external">浅谈Hive vs. HBase 区别在哪里
</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/media/hiveHbase.jpg&quot; alt=&quot;hiveHbase&quot;&gt;&lt;br&gt;从架构图中不难看出，Hive是运行在MapReduce之上的，而Hbase则是在更底层的HDFS之上，他们的读写和查询特点也因此而迥然不同。&lt;/p&gt;
    
    </summary>
    
      <category term="Bigdata" scheme="http://chant00.com/categories/Bigdata/"/>
    
    
      <category term="Bigdata" scheme="http://chant00.com/tags/Bigdata/"/>
    
      <category term="Hive" scheme="http://chant00.com/tags/Hive/"/>
    
      <category term="Hbase" scheme="http://chant00.com/tags/Hbase/"/>
    
  </entry>
  
  <entry>
    <title>在hexo博客中插入图片，音乐，视频，公式</title>
    <link href="http://chant00.com/2017/06/06/%E5%9C%A8hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%EF%BC%8C%E9%9F%B3%E4%B9%90%EF%BC%8C%E8%A7%86%E5%B1%8F%EF%BC%8C%E5%85%AC%E5%BC%8F/"/>
    <id>http://chant00.com/2017/06/06/在hexo博客中插入图片，音乐，视屏，公式/</id>
    <published>2017-06-05T16:45:09.000Z</published>
    <updated>2017-06-08T09:21:10.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h3 id="摘要："><a href="#摘要：" class="headerlink" title="摘要："></a>摘要：</h3><p>如何简洁优雅地在hexo博客中插入图片，音乐，视频，公式.<br>这篇博客本来是拿来测试图片音乐的插入的，但是测着测着，忽然灵光一现，为什么不直接写成一篇博客呢？</p>
<a id="more"></a>
<h3 id="页内跳转"><a href="#页内跳转" class="headerlink" title="页内跳转"></a>页内跳转</h3><p>添加一则小技巧，实现markdown页内跳转。<br>html标签实现</p>
<pre><code>1.    定义一个锚(id)：&lt;span id=&quot;jump&quot;&gt;跳转到的地方&lt;/span&gt;
2.    使用markdown语法：[点击跳转](#jump)
</code></pre><p>Example：<br>我在本文参考文献前加了一行<code>&lt;span id=&quot;jump&quot;&gt; &lt;/span&gt;</code>，然后在此处编写<code>[点击跳转](#jump)</code><br><a href="#jump">点击跳转</a></p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>关于插入图片，网上的图床（注册麻烦，使用麻烦，需要上传，网速不行咋办？类似Lightshot Screenshot，上传基本30秒，如果你要写一份需要详细截图的安装文档，那估计一天的时间都花在上传图片上了），hexo官方的方法（将图片放在source/image/下，这样在编辑器中并不能实时预览，而且你还需要记住图片的名字。）都令人觉得插入图片简直是个噩梦。<br>知道我遇到了MWeb，一个可以直接把图片拖入即可完成图片插入的Markdown编辑器，或者使用微信截图<code>Ctrl+command+a</code>保存(记得是点下载按钮，不是点那个小红勾)后，直接<code>Command+v</code>,图片就插入了。而且其低调简洁的界面，简单实用的快捷键，完美的诠释了什么叫优雅的写作方式（一些bug和程序崩溃除外）。<br>当然如此美腻而又强大，必然不便宜的，官方价格￥98。不要桑心，他还有免费的lite版，两个版本的区别主要是以下几点：</p>
<blockquote>
<p>文档库文档限制在 10 个以内；（然鹅，写hexo一直都是用外部模式，压根不需要文档库）<br>外部模式可引入的文件夹限制在 1 个；（然鹅，一个文件下可以有无数个文件夹）<br>支持的发布服务只可增加 1 个；（然鹅，写hexo博客，不需要编辑器来帮我发布）</p>
</blockquote>
<p>当然，MWeb不只是拿来写hexo博客的，更多信息请戳<a href="http://zh.mweb.im/" target="_blank" rel="external">MWeb官网</a>以及<a href="http://zh.mweb.im/help.html" target="_blank" rel="external">帮助文档</a>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](/media/14967219636093.jpg)</div></pre></td></tr></table></figure>
<p><img src="/media/14967219603047.jpg" alt=""></p>
<p>当然，markdown是支持GIF动图的，使用方法和图片一致，只要你放的链接是一张动图的链接就行。</p>
<p>Eaxmple:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](http://upload-images.jianshu.io/upload_images/291600-3b00271942fef854.gif?imageMogr2/auto-orient/strip)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/291600-3b00271942fef854.gif?imageMogr2/auto-orient/strip" alt=""></p>
<h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><h4 id="1-使用网易云音乐的外链播放器"><a href="#1-使用网易云音乐的外链播放器" class="headerlink" title="1.使用网易云音乐的外链播放器"></a>1.使用网易云音乐的外链播放器</h4><p>比如你右键某首歌，复制链接的到链接为<code>http://music.163.com/#/m/song?id=2919622</code>只需要其中的<code>id=2919622</code>就够了。<br><img src="/media/WX20170606-095609@2x.png" alt=""></p>
<p>那么在文章中使用ifname标签如下，记得将其中的id改为你想要的音乐id。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=430 height=86 src="//music.163.com/outchain/player?type=2&amp;id=2919622&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="430" height="86" src="//music.163.com/outchain/player?type=2&id=2919622&auto=0&height=66"></iframe>

<h4 id="2-使用-Hexo-插件插入音乐-音频"><a href="#2-使用-Hexo-插件插入音乐-音频" class="headerlink" title="2.使用 Hexo 插件插入音乐/音频"></a>2.使用 Hexo 插件插入音乐/音频</h4><p>hexo-tag-aplayer：<a href="https://github.com/grzhan/hexo-tag-aplayer" target="_blank" rel="external">https://github.com/grzhan/hexo-tag-aplayer</a><br>官方简介：<br>Embed APlayer(<a href="https://github.com/DIYgod/APlayer" target="_blank" rel="external">https://github.com/DIYgod/APlayer</a>) in Hexo posts/pages.很明显，除了posts，还可以在pages页面使用。</p>
<p>Installation:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-tag-aplayer</div></pre></td></tr></table></figure>
<p>Usage:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</div></pre></td></tr></table></figure></p>
<p>参数说明及详细信息，请戳<a href="https://github.com/grzhan/hexo-tag-aplayer#usage" target="_blank" rel="external">github</a>，还有加入歌词和播放例表等强大功能等你探索。<br>Example:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% aplayer <span class="string">"她的睫毛"</span> <span class="string">"周杰伦"</span> <span class="string">"http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3"</span>  <span class="string">"http://home.ustc.edu.cn/~mmmwhy/jay.jpg"</span> <span class="string">"autoplay=false"</span> %&#125;</div></pre></td></tr></table></figure></p>
<div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: false,
				showlrc: 0,
				music: {
					title: "她的睫毛",
					author: "周杰伦",
					url: "http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3",
					pic: "http://home.ustc.edu.cn/~mmmwhy/jay.jpg",
				}
			});
		</script>
<p>使用唱吧录制并上传音频，用浏览器打开分享链接,右键显示网页源代码</p>
<p><img src="/media/5.png" alt="2"><br>搜索<code>mp3</code>，找到你的音频链接。<br><img src="/media/image.png" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% aplayer  <span class="string">"Job or Education"</span> <span class="string">"Chant"</span> <span class="string">"http://lzscuw.changba.com/899486104.mp3"</span> <span class="string">"http://aliimg.changba.com/cache/photo/735572112_640_640.jpg"</span> <span class="string">"autoplay=false"</span> %&#125;</div></pre></td></tr></table></figure>
<div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer1"),
				narrow: false,
				autoplay: false,
				showlrc: 0,
				music: {
					title: "Job or Education",
					author: "Chant",
					url: "http://lzscuw.changba.com/899486104.mp3",
					pic: "http://aliimg.changba.com/cache/photo/735572112_640_640.jpg",
				}
			});
		</script>
<h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><h4 id="1使用标签插入视频"><a href="#1使用标签插入视频" class="headerlink" title="1使用标签插入视频"></a>1使用标签插入视频</h4><h5 id="1-1使用iframe标签插入视频"><a href="#1-1使用iframe标签插入视频" class="headerlink" title="1.1使用iframe标签插入视频"></a>1.1使用iframe标签插入视频</h5><p>右键视频，复制嵌入代码，直接将嵌入代码粘贴进你的markdown文章就OK啦。<br><img src="/media/3.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe width=&quot;854&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/xqf2DJgucsU&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure>
<p>此方法的成败与hexo主题有关，在本主题下加载嵌入失败，在别的主题下，比如<a href="https://chant01.github.io/2017/06/06/%E5%9C%A8hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%EF%BC%8C%E9%9F%B3%E4%B9%90%EF%BC%8C%E8%A7%86%E5%B1%8F%EF%BC%8C%E5%85%AC%E5%BC%8F/#y2" target="_blank" rel="external">maupassant</a>成功。</p>
<p><span id="y1"> </span></p>
<iframe width="854" height="480" src="https://www.youtube.com/embed/xqf2DJgucsU" frameborder="0" allowfullscreen></iframe>

<h5 id="1-2使用embed标签插入视屏"><a href="#1-2使用embed标签插入视屏" class="headerlink" title="1.2使用embed标签插入视屏"></a>1.2使用embed标签插入视屏</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;embed height=&quot;415&quot; width=&quot;544&quot; quality=&quot;high&quot; allowfullscreen=&quot;true&quot; type=&quot;application/x-shockwave-flash&quot; src=&quot;//static.hdslb.com/miniloader.swf&quot; flashvars=&quot;aid=8506694&amp;page=1&quot; pluginspage=&quot;//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash&quot;&gt;&lt;/embed&gt;</div></pre></td></tr></table></figure>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=8506694&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash">

<h4 id="2-使用hexo插件插入视频"><a href="#2-使用hexo插件插入视频" class="headerlink" title="2.使用hexo插件插入视频"></a>2.使用hexo插件插入视频</h4><p>hexo-tag-dplayer：<a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="external">https://github.com/NextMoe/hexo-tag-dplayer</a><br>与aplayer类似，不过它是用来插入视频。</p>
<p>Installation:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-tag-dplayer --save</div></pre></td></tr></table></figure>
<p>Usage:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% dplayer key=value ... %&#125;</div></pre></td></tr></table></figure>
<p>参数说明及详细信息，请戳<a href="https://github.com/NextMoe/hexo-tag-dplayer#usage" target="_blank" rel="external">github</a><br>Example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% dplayer &quot;url=http://home.ustc.edu.cn/~mmmwhy/GEM.mp4&quot;  &quot;pic=http://home.ustc.edu.cn/~mmmwhy/GEM.jpg&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;</div></pre></td></tr></table></figure>
<div id="dplayer0" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://home.ustc.edu.cn/~mmmwhy/GEM.mp4","pic":"http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"}});</script>
<p>Example:<br>此方法youtube视频的引用还在探索中。</p>
<div id="dplayer1" class="dplayer" style="margin-bottom: 20px; width:854; height:480;"></div><script>var dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"video":{"url":"https://www.youtube.com/embed/xqf2DJgucsU"}});</script>
<p>以下是官方示例，点击设置按钮还有弹幕、速度、洗脑循环等选项。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% dplayer <span class="string">"url=http://devtest.qiniudn.com/若能绽放光芒.mp4"</span> <span class="string">"addition=https://dplayer.daoapp.io/bilibili?aid=4157142"</span> <span class="string">"api=http://dplayer.daoapp.io"</span> <span class="string">"pic=http://devtest.qiniudn.com/若能绽放光芒.png"</span> <span class="string">"id=9E2E3368B56CDBB4"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"token=tokendemo"</span> %&#125;</div></pre></td></tr></table></figure>
<div id="dplayer2" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer2 = new DPlayer({"element":document.getElementById("dplayer2"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://devtest.qiniudn.com/若能绽放光芒.mp4","pic":"http://devtest.qiniudn.com/若能绽放光芒.png"},"danmaku":{"api":"http://dplayer.daoapp.io","id":"9E2E3368B56CDBB4","token":"tokendemo","addition":["https://dplayer.daoapp.io/bilibili?aid=4157142"]}});</script>
<p><span id="jump"> </span></p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p>1.<a href="http://feiyang.li/2017/02/24/Hexo-music-video/" target="_blank" rel="external">Hexo博客中插入音乐/视频</a><br>2.<a href="http://www.jianshu.com/p/96a13401b0ca" target="_blank" rel="external">markdown语法及编辑器推荐，都是踩过的坑</a><br>3.<a href="http://www.cnblogs.com/JohnTsai/p/4027229.html" target="_blank" rel="external">页内跳转</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;摘要：&quot;&gt;&lt;a href=&quot;#摘要：&quot; class=&quot;headerlink&quot; title=&quot;摘要：&quot;&gt;&lt;/a&gt;摘要：&lt;/h3&gt;&lt;p&gt;如何简洁优雅地在hexo博客中插入图片，音乐，视频，公式.&lt;br&gt;这篇博客本来是拿来测试图片音乐的插入的，但是测着测着，忽然灵光一现，为什么不直接写成一篇博客呢？&lt;/p&gt;
    
    </summary>
    
      <category term="test" scheme="http://chant00.com/categories/test/"/>
    
    
      <category term="随笔" scheme="http://chant00.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="test" scheme="http://chant00.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>java远程调用shell脚本</title>
    <link href="http://chant00.com/2017/06/04/java%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8shell%E8%84%9A%E6%9C%AC/"/>
    <id>http://chant00.com/2017/06/04/java远程调用shell脚本/</id>
    <published>2017-06-04T14:10:49.000Z</published>
    <updated>2017-06-08T09:23:11.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><hr>
<h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h3><p>java程序调用远程服务器的shell脚本来实现服务的起、停、重启。</p>
<a id="more"></a>
<h3 id="前言（废话）："><a href="#前言（废话）：" class="headerlink" title="前言（废话）："></a>前言（废话）：</h3><p>由于知道我经验不足，领导给新同事分配任务时说：“这个java远程调用shell脚本重启服务，他两可能搞不出来，你研究下吧。”被人鄙视了一把，于是自己搭虚拟机，查资料，试一把，突然发现，好多事情其实没那么难嘛。</p>
<h3 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h3><h4 id="Step1-准备脚本"><a href="#Step1-准备脚本" class="headerlink" title="Step1.准备脚本"></a>Step1.准备脚本</h4><p>重启的关键在于关闭，要关闭程序，那就要先找到程序pid，然后kill。<br>找到核心命令（获取pid）：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ID=`ps -ef | grep <span class="string">"$NAME"</span> | grep -v <span class="string">"grep"</span> | grep -v kill  | awk <span class="string">'&#123;print $2&#125;'</span>`</div></pre></td></tr></table></figure>
<p>于是初期博主调试后，写出了这样的shell</p>
<blockquote>
<p>如果你的虚机是root用户，kill命令会很强大，所以一定判断参数是否为空或数字，否则，分分钟把你的所有进程都kill，虚机瞬间爆炸😂，重头再来。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/sh</span></div><div class="line">NAME=$<span class="number">1</span></div><div class="line"><span class="comment">##检查参数，不能为空或纯数字,否则会kill几乎所有进程，直接死机。非root用户的话，应该不会死机，会报permission denied.</span></div><div class="line">a=`echo <span class="string">"$NAME"</span> | grep [^<span class="number">0</span><span class="number">-9</span>] &gt;/dev/null &amp;&amp; echo <span class="number">0</span> || echo <span class="number">1</span>` <span class="comment">#判断参数是否为数字,是数字则返回1，不是则返回0</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"$NAME"</span> == <span class="string">""</span> ]; then <span class="comment">#$NAME一定要加引号，不然$NAME为空的时候就成了if[ == "" ],会报错：unary operator</span></div><div class="line">echo <span class="string">"未输入要kill的进程名"</span></div><div class="line"><span class="keyword">elif</span> [ $a = <span class="number">1</span> ]; then</div><div class="line">echo <span class="string">"进程名不能为纯数字"</span></div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="comment">##重启进程</span></div><div class="line">echo <span class="string">"-----------------------"</span></div><div class="line">echo -e <span class="string">"pNmae\t=\t$NAME"</span></div><div class="line">ID=`ps -ef | grep <span class="string">"$NAME"</span> | grep -v <span class="string">"grep"</span> | grep -v <span class="string">"restart"</span>  | awk <span class="string">'&#123;print $2&#125;'</span>`</div><div class="line">echo -e <span class="string">"pid\t=\t$ID"</span></div><div class="line">echo <span class="string">"-----------------------"</span></div><div class="line"><span class="keyword">for</span> id <span class="keyword">in</span> $ID</div><div class="line">do</div><div class="line">kill <span class="number">-9</span> $id</div><div class="line">echo <span class="string">"killed $id"</span></div><div class="line">done</div><div class="line">echo <span class="string">"-----------------------"</span></div><div class="line">echo <span class="string">"restarted"</span> $NAME</div><div class="line">./$NAME <span class="number">1</span>&gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</div><div class="line"><span class="comment">#./$NAME</span></div><div class="line">fi</div></pre></td></tr></table></figure>
<p>然后领导交于博主一份专业的shell脚本，瞬间把博主的三脚猫脚本秒成渣了。于是博主认真研读，添加注释，并稍作修改得到以下脚本。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line"># -*- coding: utf-8 -*-</div><div class="line">#Filename:    server.sh.Chant</div><div class="line">#Author:        Chant</div><div class="line">#Email:        statuschuan@gmail.com</div><div class="line">#Date:        2017-06-03</div><div class="line">#Desc:</div><div class="line">#用途：该脚本用于停止、启动服务</div><div class="line">#使用说明：</div><div class="line">#启动该脚本时需要两个参数，参数均不能为空</div><div class="line">#第一个参数为：程序入口名称</div><div class="line">#第二个参数为：参数名称</div><div class="line">#注意事项：</div><div class="line">#远程调用时，请将脚本环境变量配置到/etc/bashrc或者用户目录下的.bashrc</div><div class="line"></div><div class="line">print_usage()</div><div class="line">&#123;</div><div class="line">  echo "Usage: $0 COMMAND"</div><div class="line">  echo "where COMMAND is one of:"</div><div class="line">  echo "  help                                         Help print this usage message"</div><div class="line">  echo "  start &lt;server_name&gt; &lt;server_param&gt;           Start"</div><div class="line">  echo "  stop  &lt;server_name&gt; &lt;server_param&gt;           Stop"</div><div class="line">  echo "  restart  &lt;server_name&gt; &lt;server_param&gt;        Restart"</div><div class="line">&#125;</div><div class="line"></div><div class="line">start()&#123;</div><div class="line">  #echo "start not suport now."</div><div class="line">  cmd=$@</div><div class="line">  $cmd 1&gt;/dev/null 2&gt;&amp;1 &amp; #这里一定要写1&gt;/dev/null 2&gt;&amp;1 不能只写&amp;,否则远程调用时，会等待cmd的返回结果(stdOut)，就么法愉快地玩耍了。</div><div class="line">&#125;</div><div class="line"></div><div class="line">stop()&#123;</div><div class="line">  #get arguments</div><div class="line">  SERVER_NAME=$1</div><div class="line">  SERVER_PARAM=$2</div><div class="line">  PROCESS_NAME="$1 $2"</div><div class="line">  #echo $PROCESS_NAME</div><div class="line">  if [ "$1" = "" ];</div><div class="line">  then</div><div class="line">    echo "第二个参数不能为空"</div><div class="line">    exit 0;</div><div class="line">  fi</div><div class="line">  if [ -z "$2" ];</div><div class="line">  then</div><div class="line">    echo "第三个参数不能为空"</div><div class="line">    exit 0;</div><div class="line">  fi</div><div class="line"></div><div class="line">  #get process's pids</div><div class="line">  pids=`ps -ef|grep "$PROCESS_NAME"|grep -v "grep"|awk '&#123;print $2&#125;'`</div><div class="line"></div><div class="line">  #Chant:使用以下命令可以过滤掉脚本本身的pid，就不用写后面的判断语句了。</div><div class="line">  #但是其实用$$获取当前脚本pid在逻辑上更严密，否则，万一你的脚本名和要操作的程序名有相同部分就会出问题，</div><div class="line">  #eg: 脚本名为：ser.sh 而程序名为：poser.sh,那么由于grep -v "$0" 就取不到其pid了</div><div class="line">  #pids=`ps -ef|grep "$PROCESS_NAME"|grep -v "grep"| grep -v "$0" |awk '&#123;print $2&#125;'`</div><div class="line">  # 为basename指定一个路径，basename命令会删掉所有的前缀包括最后一个slash（‘/’）字符，然后将字符串显示出来。</div><div class="line">  #pids=`ps -ef|grep "$PROCESS_NAME"|grep -v "grep"| grep -v "$(basename $0)" |awk '&#123;print $2&#125;'`</div><div class="line"></div><div class="line">  current_pid=$$</div><div class="line">  echo process pids is $pids.</div><div class="line"></div><div class="line">  #kill process</div><div class="line">  if [ -n "$pids" ]; #判断pids是否为空，引号必须加。"$pids" == ""等效</div><div class="line">  then</div><div class="line">    for pid in $pids</div><div class="line">    do</div><div class="line">      #current shell pid shoud not kill.</div><div class="line">      if [ $pid -ne $current_pid ];</div><div class="line">      then</div><div class="line">        #check $pid is exist or not</div><div class="line">        check=`ps -p $pid`</div><div class="line">        if [ $? -eq 0 ];</div><div class="line">        then</div><div class="line">          echo kill $pid start.</div><div class="line">          kill -9 $pid</div><div class="line">          #judge result</div><div class="line">          if [ $? -eq 0 ];</div><div class="line">          then</div><div class="line">            echo kill $pid success.</div><div class="line">          else</div><div class="line">            echo kill $pid fail.</div><div class="line">          fi</div><div class="line"></div><div class="line">        fi</div><div class="line">      fi</div><div class="line"></div><div class="line">    done</div><div class="line">  else</div><div class="line">    echo "$PROCESS_NAME does not exist."</div><div class="line">  fi</div><div class="line">&#125;</div><div class="line"></div><div class="line"># get command arguments</div><div class="line">COMMAND=$1</div><div class="line">shift</div><div class="line"># support help commands</div><div class="line">case $COMMAND in</div><div class="line">  --help|-help|-h|help)</div><div class="line">	print_usage</div><div class="line">	exit 0</div><div class="line">  ;;</div><div class="line">  "")</div><div class="line">	print_usage</div><div class="line">	exit 0</div><div class="line">  ;;</div><div class="line">  "start")</div><div class="line">	start $@</div><div class="line">	echo "$@ started"</div><div class="line">	exit 0</div><div class="line">  ;;</div><div class="line">	"stop")</div><div class="line">	stop $@</div><div class="line">	exit 0</div><div class="line">  ;;</div><div class="line">  "restart")</div><div class="line">	start and stop的参数需要一致才可以，如果不一致则需要调整参数传入方式</div><div class="line">	stop $@</div><div class="line">	eep 3</div><div class="line">	tart $@</div><div class="line">	echo "$@ restarted"</div><div class="line">    exit 0</div><div class="line">  ;;</div><div class="line">esac</div></pre></td></tr></table></figure>
<h4 id="Step2-java程序远程调用shell"><a href="#Step2-java程序远程调用shell" class="headerlink" title="Step2.java程序远程调用shell"></a>Step2.java程序远程调用shell</h4><blockquote>
<p>1.导入需要依赖的jar包。Java远程调用Shell脚本这个程序需要ganymed-ssh2-build210.jar包。里面还有example包，方便学习。为了调试方便，可以将\ganymed-ssh2-build210\src下的代码直接拷贝到我们的工程里，此源码的好处就是没有依赖很多其他的包，拷贝过来干干净净。<br>2.导入commons-io包，里面的IOUtils会经常使用。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;dependencies&gt;</div><div class="line">    &lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;commons-io&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</div><div class="line">        &lt;version&gt;2.5&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;!-- https://mvnrepository.com/artifact/ch.ethz.ganymed/ganymed-ssh2 --&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;ch.ethz.ganymed&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;ganymed-ssh2&lt;/artifactId&gt;</div><div class="line">        &lt;version&gt;build210&lt;/version&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line"></div><div class="line">&lt;/dependencies&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>3、编写RemoteShellExecutor工具类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> RemoteShell;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.*;</div><div class="line"><span class="keyword">import</span> java.nio.charset.Charset;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> ch.ethz.ssh2.ChannelCondition;</div><div class="line"><span class="keyword">import</span> ch.ethz.ssh2.Connection;</div><div class="line"><span class="keyword">import</span> ch.ethz.ssh2.Session;</div><div class="line"><span class="keyword">import</span> ch.ethz.ssh2.StreamGobbler;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by Chant on 2017/5/27.</div><div class="line"> * 远程调用脚本重启服务</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemoteShellExecutor</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Connection conn;</div><div class="line">    <span class="comment">/** 远程机器IP */</span></div><div class="line">    <span class="keyword">private</span> String ip;</div><div class="line">    <span class="comment">/** 用户名 */</span></div><div class="line">    <span class="keyword">private</span> String osUsername;</div><div class="line">    <span class="comment">/** 密码 */</span></div><div class="line">    <span class="keyword">private</span> String password;</div><div class="line">    <span class="keyword">private</span> String charset = Charset.defaultCharset().toString();</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TIME_OUT = <span class="number">1000</span> * <span class="number">5</span> * <span class="number">60</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 构造函数</div><div class="line">     * <span class="doctag">@param</span> ip</div><div class="line">     * <span class="doctag">@param</span> usr</div><div class="line">     * <span class="doctag">@param</span> pasword</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RemoteShellExecutor</span><span class="params">(String ip, String usr, String pasword)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.ip = ip;</div><div class="line">        <span class="keyword">this</span>.osUsername = usr;</div><div class="line">        <span class="keyword">this</span>.password = pasword;</div><div class="line"><span class="comment">//        System.out.println(charset);</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 登录</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        conn = <span class="keyword">new</span> Connection(ip);</div><div class="line">        conn.connect();</div><div class="line">        <span class="keyword">return</span> conn.authenticateWithPassword(osUsername, password);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行脚本</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> cmds</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     * <span class="doctag">@throws</span> Exception</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">exec</span><span class="params">(String cmds)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        InputStream stdOut = <span class="keyword">null</span>;</div><div class="line">        InputStream stdErr = <span class="keyword">null</span>;</div><div class="line">        String outStr = <span class="string">""</span>;</div><div class="line">        String outErr = <span class="string">""</span>;</div><div class="line">        <span class="keyword">int</span> ret = -<span class="number">1</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (login()) &#123;</div><div class="line">                <span class="comment">// Open a new &#123;@link Session&#125; on this connection</span></div><div class="line">                Session session = conn.openSession();</div><div class="line">                <span class="comment">// Execute a command on the remote machine.</span></div><div class="line">                session.execCommand(cmds);</div><div class="line"></div><div class="line">                stdOut = <span class="keyword">new</span> StreamGobbler(session.getStdout());</div><div class="line">                outStr = processStream(stdOut, charset);</div><div class="line"></div><div class="line">                stdErr = <span class="keyword">new</span> StreamGobbler(session.getStderr());</div><div class="line">                outErr = processStream(stdErr, charset);</div><div class="line"></div><div class="line">                session.waitForCondition(ChannelCondition.EXIT_STATUS, TIME_OUT);</div><div class="line"></div><div class="line">                System.out.println(<span class="string">"outStr="</span> +<span class="string">"\n"</span>+ outStr);</div><div class="line">                System.out.println(<span class="string">"outErr="</span> +<span class="string">"\n"</span>+ outErr);</div><div class="line"></div><div class="line">                ret = session.getExitStatus();</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"登录远程机器失败"</span> + ip); <span class="comment">// 自定义异常类 实现略</span></div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</div><div class="line">                conn.close();</div><div class="line">            &#125;</div><div class="line">            IOUtils.closeQuietly(stdOut);</div><div class="line">            IOUtils.closeQuietly(stdErr);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ret;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> in</div><div class="line">     * <span class="doctag">@param</span> charset</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     * <span class="doctag">@throws</span> IOException</div><div class="line">     * <span class="doctag">@throws</span> UnsupportedEncodingException</div><div class="line">     */</div><div class="line"><span class="comment">//    private String processStream(InputStream in, String charset) throws Exception &#123;</span></div><div class="line"><span class="comment">//        byte[] buf = new byte[1024];</span></div><div class="line"><span class="comment">//        StringBuilder sb = new StringBuilder();</span></div><div class="line"><span class="comment">//        while (in.read(buf) != -1) &#123;</span></div><div class="line"><span class="comment">//            sb.append(new String(buf, charset));</span></div><div class="line"><span class="comment">//        &#125;</span></div><div class="line"><span class="comment">//        return sb.toString();</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">processStream</span><span class="params">(InputStream in, String charset)</span><span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">        BufferedReader bufr = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in,charset));</div><div class="line">        String line = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">while</span>((line = bufr.readLine()) != <span class="keyword">null</span>)&#123;</div><div class="line">            sb.append(line);</div><div class="line">            sb.append(<span class="string">"\n"</span>);<span class="comment">//？？换行符是依赖平台的</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sb.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>4、Java程序调用远程Shell</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    RemoteShellExecutor(<span class="string">"10.10.10.100"</span>, <span class="string">"root"</span>, <span class="string">"123123"</span>);</div><div class="line">    String proName = <span class="string">"entranceMain.sh"</span>;</div><div class="line">    String para = <span class="string">"1"</span>;</div><div class="line">        System.out.println(executor.exec(<span class="string">"server.sh.Chant start "</span> + proName +<span class="string">" "</span>+ para));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>将start换为restart，stop，测试结果如下，注意pid发生变化，说明重启成功。<br><img src="http://image.jiantuku.com/17-6-4/80160967.jpg?attname=file_1496584141329_3b57.png&amp;e=1496584810&amp;token=el7kgPgYzpJoB23jrChWJ2gV3HpRl0VCzFn8rKKv:24Xu8-YbrqzYKvsT6uoA8NUefVk=" alt=""></p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="http://www.cnblogs.com/zjrodger/p/5551385.html" target="_blank" rel="external">Java程序调用远程Shell脚本</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;目的：&quot;&gt;&lt;a href=&quot;#目的：&quot; class=&quot;headerlink&quot; title=&quot;目的：&quot;&gt;&lt;/a&gt;目的：&lt;/h3&gt;&lt;p&gt;java程序调用远程服务器的shell脚本来实现服务的起、停、重启。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://chant00.com/categories/java/"/>
    
    
      <category term="java" scheme="http://chant00.com/tags/java/"/>
    
      <category term="shell" scheme="http://chant00.com/tags/shell/"/>
    
  </entry>
  
</feed>
